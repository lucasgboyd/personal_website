[
  {
    "path": "posts/2022-02-18-binomial-logistic-regression/",
    "title": "Binomial Logistic Regression",
    "description": "Palmetto species analysis and model fit.",
    "author": [
      {
        "name": "Lucas Boyd",
        "url": {}
      }
    ],
    "date": "2022-02-18",
    "categories": [],
    "contents": "\n\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\n# attach packages\nlibrary(tidyverse)\nlibrary(here)\nlibrary(broom)\nlibrary(patchwork)\nlibrary(AICcmodavg)\nlibrary(caret)\nlibrary(kableExtra)\nlibrary(equatiomatic)\n\n\n\nOverview\nThe following report examines growth data of two dominant palmetto species (Serenoa repens and Sabal etonia) in South Florida to produce a binomial logistic regression model that classifies plant species based on several physical features of the plant. First, differences between the species are visualized to determine which variables will be useful in classifying species. Then, the model is evaluated using 10-fold cross validation and AIC. Finally, the model is applied to the data to determine its efficacy in predicting plant species.\nData Citation: Data source: Abrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\nReading in and cleaning up the data\n\n\npalmetto <- read_csv(here(\"data\", \"palmetto.csv\")) %>% \n  select(height, length, width, green_lvs, species) %>% # selecting for variables\n# 1 = Serenoa repens, 2 = Sabal etonia\n  drop_na() %>% # dropping NA values\n  mutate(species_name = case_when(\n    species == 1 ~ \"Serenoa repens\", # new column for species name\n    species == 2 ~ \"Sabal etonia\"\n  )) %>% \n  mutate(species_name = as_factor(species_name)) # changing species name to a factor for use in blr\n\n\n\nVariables of interest: - Number of green leaves - green_lvs\nHeight of plant (cm) - height\nWidth of canopy (cm) - width\nLength of canopy (cm) - length\nVisualizing differences between species\n\n\n# ggplots to visualize the differences in each variable between species\n# effectplot could also be useful in these visualizations for blr \n\np1 <- ggplot(data = palmetto, aes(x = species_name, y = green_lvs, fill = species_name)) + \n  geom_violin(scale = \"count\", color = \"black\") + # geom violin to visualize the large volume of data\ngeom_boxplot(color = \"black\", fill = NA, width = 0.1, outlier.color = NA) + # adding summary median and quartiles to figure\n  stat_summary(fun=mean, # adding the mean to the figure \n               geom=\"point\", \n               shape=20, \n               size=4, \n               color=\"black\", \n               fill=\"black\") +\n  scale_fill_manual(values = c(\"orange4\", \"darkolivegreen\")) + # customizing colors\n  theme_minimal(13) + # changing theme and font size\n  theme(legend.position = \"top\",\n        axis.text.x = element_blank(),\n        legend.title = element_blank()) +\n  labs(x = element_blank(), y = \"Number of green leaves\") # adding labels\n\n# repeated above code for each variable in subsequent 3 plots, inserting different variables\n\np2 <- ggplot(data = palmetto, (aes(x = species_name, y = height, fill = species_name))) +\n    geom_violin(scale = \"count\", color = \"black\") +\ngeom_boxplot(color = \"black\", fill = NA, width = 0.1, outlier.color = NA) +\n  stat_summary(fun=mean, \n               geom=\"point\", \n               shape=20, \n               size=4, \n               color=\"black\", \n               fill=\"black\") +\n  scale_fill_manual(values = c(\"orange4\", \"darkolivegreen\")) +\n  theme_minimal(13) +\n  theme(legend.position = \"none\",\n        axis.text.x = element_blank()) +\n  labs(x = element_blank(), y = \"Plant Height (cm)\") \n\np3 <- ggplot(data = palmetto, (aes(x = species_name, y = width, fill = species_name))) +\n    geom_violin(scale = \"count\", color = \"black\") +\ngeom_boxplot(color = \"black\", fill = NA, width = 0.1, outlier.color = NA) +\n  stat_summary(fun=mean, \n               geom=\"point\", \n               shape=20, \n               size=4, \n               color=\"black\", \n               fill=\"black\") +\n  scale_fill_manual(values = c(\"orange4\", \"darkolivegreen\")) +\n  theme_minimal(13) +\n  theme(legend.position = \"none\",\n        axis.text.x = element_blank()) +\n  labs(x = element_blank(), y = \"Canopy Width (cm)\") \n\np4 <- ggplot(data = palmetto, (aes(x = species_name, y = length, fill = species_name))) +\n    geom_violin(scale = \"count\", color = \"black\") +\ngeom_boxplot(color = \"black\", fill = NA, width = 0.1, outlier.color = NA) +\n  stat_summary(fun=mean, \n               geom=\"point\", \n               shape=20, \n               size=4, \n               color=\"black\", \n               fill=\"black\") +\n  scale_fill_manual(values = c(\"orange4\", \"darkolivegreen\")) +\n  theme_minimal(13) +\n  theme(legend.position = \"none\",\n        axis.text.x = element_blank()) +\n  labs(x = element_blank(), y = \"Canopy Length (cm)\") \n\n\n\n\n\n(p1 | p2)\n\n\n\n(p3 | p4)\n\n\n\n\nFig. 1 compares two palmetto species to determine feasibility of each of four variables in predicting whether a plant is Serenoa repens (green) or Sabal etonia (orange). Variables examined in the figure are: number of green leaves on the plant (top left), height of plant (cm) (top right), canopy width (cm) (bottom left) and canopy length (cm) (bottom right). Width of the shape in each figure represents the quantity of observations at that particular value. Box endpoints indicate the 25th and 75th percentile values; the black line and black point within the box indicate the median and mean value for each species, respectively.\nConclusion: Based on this visualization, it appears that number of green leaves and canopy length will be useful in correctly classifying species, since there is a noticeable difference in the mean, median and overall spread of the data. Plant height and canopy width differ only very slightly between the two species, and thus will be less useful in classifying the species of plant.\nBinomial logistic regression\nRunning BLR for two models:\nModel 1: Plant species as a function of plant height, number of green leaves, canopy width and canopy length\nModel 2: Plant species as a function of plant height, number of green leaves, and canopy width\n\n\n# storing functions of combinations of variables for use in regression\nf1 <- species_name ~ height + length + width + green_lvs\nf2 <- species_name ~ height + width + green_lvs\n\n# running and storing the regressions for each formula\nblr1 <- glm(formula = f1,\n            data = palmetto,\n            family = \"binomial\")\n\nblr2 <- glm(formula = f2,\n            data = palmetto,\n            family = \"binomial\")\n\n# taking a look at the outputs of the regression with summary()\n# reference (0) = Sabal etonia\n\n\n\nModel Selection\nAIC\n\n\naic <- aictab(list(blr1, blr2))\n# model1 = 5194\n# model2 = 5987\n\n\n\nModel 1: 5194.6\nModel 2: 5987.5\nThe difference in AICc is very large (792.9), thus model 1 has significantly better fit than model 2.\n10-fold cross validation\n\n\nset.seed(24) # setting seed for reproducibility\n\ntr_ctrl <- trainControl(method = \"repeatedcv\", number = 10, repeats = 10) # storing train control, specifying 10 folds\n\n# train the model\nmodel1 <- train(f1, data = palmetto,\n                method = \"glm\",\n                family = \"binomial\",\n                trControl = tr_ctrl)\n# accuracy = 0.917\n\n# train the other model\nmodel2 <- train(f2, data = palmetto,\n                method = \"glm\",\n                family = \"binomial\",\n                trControl = tr_ctrl)\n# accuracy = 0.899\n\n\n\nModel assessment results: Model 1, which classifies palmetto species as a function of plant height, canopy width, canopy length and number of green leaves, performed better during 10-fold cross validation (accuracy = 91.7%, AICc = 5194.6) than model 2 (accuracy = 89.9%, AICc = 5987.5). Thus, based on the prediction accuracy results and AIC values, model 1 is preferred.\nRegression results\nTable 1 shows the results of binomial logistic regression for model 1. Coefficients show the change in log odds of the resulting species being Sabal etonia (reference) as opposed to Serenoa repens.\n\n\n# storing the results of regression as a data frame\nblr1_tidy <- tidy(blr1) %>%  \n  mutate(p.value = case_when( # finalizing p.values for table\n    p.value <0.001 ~ \"<0.001\"\n  )) %>% \n  mutate(term = case_when( # finalizing variable names for table\n         term == \"(Intercept)\" ~ \"Intercept\",\n         term == \"height\" ~ \"Height\",\n         term == \"length\" ~ \"Length\",\n         term == \"width\" ~ \"Width\",\n         term == \"green_lvs\" ~ \"# of green leaves\")) %>% \n  select(-statistic)\n\n# finalizing table\nkable(blr1_tidy, \n      col.names = c(\"Term\", \"Coefficient\", \"Standard Error\", \"P Value\"),\n      digits = 3) %>% \n  kable_minimal(full_width = FALSE)\n\n\n\nTerm\n\n\nCoefficient\n\n\nStandard Error\n\n\nP Value\n\n\nIntercept\n\n\n3.227\n\n\n0.142\n\n\n<0.001\n\n\nHeight\n\n\n-0.029\n\n\n0.002\n\n\n<0.001\n\n\nLength\n\n\n0.046\n\n\n0.002\n\n\n<0.001\n\n\nWidth\n\n\n0.039\n\n\n0.002\n\n\n<0.001\n\n\n# of green leaves\n\n\n-1.908\n\n\n0.039\n\n\n<0.001\n\n\nFinal Model Equation: \\[\n\\begin{aligned}\n\\log\\left[ \\frac { \\widehat{P( \\operatorname{species\\_name} = \\operatorname{Sabal\\ etonia} )} }{ 1 - \\widehat{P( \\operatorname{species\\_name} = \\operatorname{Sabal\\ etonia} )} } \\right] &= 3.23 - 0.03(\\operatorname{height}) + 0.05(\\operatorname{length}) + 0.04(\\operatorname{width})\\ - \\\\\n&\\quad 1.91(\\operatorname{green\\_lvs})\n\\end{aligned}\n\\]\nModel success rate\nTable 1 shows the success rate of the chosen model in classifying each plant species when trained on and applied to the whole data set.\n\n\n# storing a function for prediction accuracy\nprediction_accuracy <- function(x, y) {\n  accurate <- ifelse(x == y, 1, 0)\n  return(accurate)\n}\n\n# creating a new dataframe with predictions based on our model\n# could also use augment() here: palmetto_augment <- blr1 %>% augment(type.predict = \"response\") \npalmetto_success <- palmetto %>% \n  mutate(chances_sabal = predict(blr1, # adding a new column for the probability that the species is sabal, given our model\n                   palmetto,\n                   type = \"response\")) %>% \n  mutate(predicted = ifelse(chances_sabal >= .50, \"Sabal etonia\", \"Serenoa repens\")) %>%  \n  # adding a new column that predicts the species based on the probability, using 50% as the threshold\n  mutate(accurate = prediction_accuracy(species_name, predicted))\n\n# creating a final table for model prediction accuracy for each plant\n\naccuracy_table <- palmetto_success %>% \n  group_by(species_name) %>% # grouping by species\n  summarize(observations = n(),\n    total_accurate = sum(accurate), # finding total accurate predictions\n            total_inaccurate = n() - sum(accurate), # total inaccurate predictions\n            accuracy = (mean(accurate))*100,) # accuracy %\n\n# finalized table with kable\nkable(accuracy_table, digits = 1, col.names = c(\"Palmetto Species\", \"Total Observations\", \"Accurate\", \"Inaccurate\", \"% Accurate \")) %>% \n  kable_minimal(full_width = FALSE)\n\n\n\nPalmetto Species\n\n\nTotal Observations\n\n\nAccurate\n\n\nInaccurate\n\n\n% Accurate\n\n\nSerenoa repens\n\n\n6112\n\n\n5548\n\n\n564\n\n\n90.8\n\n\nSabal etonia\n\n\n6155\n\n\n5701\n\n\n454\n\n\n92.6\n\n\nConclusion: Model 1 (species as a function of plant height, canopy width, canopy length, and number of green leaves) is highly effective in classifying a plant as either Sabal etonia (92.6%, n = 6155) or Serenoa repens (90.8%, n = 6112).\n\n\n\n",
    "preview": "posts/2022-02-18-binomial-logistic-regression/binomial-logistic-regression_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-02-18T15:01:15-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-18-lizardsnls/",
    "title": "Nonlinear Least Squares",
    "description": "Parameter estimation with LTER lizard species data.",
    "author": [
      {
        "name": "Lucas Boyd",
        "url": {}
      }
    ],
    "date": "2022-02-18",
    "categories": [],
    "contents": "\nOverview\nThe following report examines lizard pitfall trap data in the Jornada Basin LTER site from 1989-2006. Firs, non-linear least squares (NLS) is used to fit a model of lizard weight as a function of its snout-vent length across all 13 lizard species. Then, NLS is used again to fit a model to male western whiptail lizards. Finally, the species-specific and general models are compared to determine which one is more effective.\nData Citation: Lightfoot, D. and W.G. Whitford. 2020. Lizard pitfall trap data from 11 NPP study locations at the Jornada Basin LTER site, 1989-2006 ver 37. Environmental Data Initiative. https://doi.org/10.6073/pasta/4a6e258fb49c31e222ecbbcfd128967f\nSetup\n\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\n# attach packages\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(purrr)\nlibrary(here)\nlibrary(janitor)\nlibrary(kableExtra)\nlibrary(modelr)\n\n\n\n\n\n# reading in the data\nlizards <- read_csv(here(\"data\", \"lizard.csv\")) %>% \n  clean_names() %>% \n  mutate(log_weight = log(weight)) %>% # log transforming the data - since we are using an exponential base equation\n  mutate(log_length = log(sv_length)) %>% \n  mutate(sex = case_when(\n    sex == \"M\" ~ \"Male\",\n    sex == \"F\" ~ \"Female\"\n  )) %>% \n  drop_na()\n\n\n\nFinding guess coefficients for use in NLS\nThe following equation was used as a starting point for the structure of the NLS model: \\[\nW = a(SVL)^b\n\\]\n\n\n# running a linear regression on log transformed data to find coefficients\nguess_model <- lm(log_weight ~ log_length, data = lizards)\n\ntidy_guess <- tidy(guess_model) # tidy output of lm model\n\ncoef <- coefficients(guess_model) # pulling out coefficients for use in NLS\n# estimate of coefficient b = 2.537 `r tidy_guess$estimate[2]`\n# estmate of coefficent b = -8.475 `r tidy_guess$estimate[1]`\n\n# storing a function of our model with coefficients\nweight_function <- function(a, sv_length, b){\n  weight = a*(sv_length)^b\n  return(weight)\n}\n\n\n\nRunning NLS on all data\nTable 1 displays the results of NLS analysis on all lizards species, indicating the coefficients produced by the model, standard error, and signficance level.\n\n\n# running the NLS\nlizards_nls <- nls(weight ~ weight_function(a, sv_length, b),\n                  data = lizards,\n                  start = list(b = coef[2], # starting with the coefficients we estimated from the linear model\n                               a = exp(coef[1]))) # retransforming the intercept with exp()\n\nnls_tidy <- tidy(lizards_nls) # tidy output of NLS model\n\n# making a finalized table of the results of the NLS model\nnls_tidy %>% \n  select(-statistic) %>% \n  mutate(p.value = case_when(\n    p.value < 0.001 ~ \"<0.001\"\n  )) %>% \nkable(col.names = c(\"Terms\", \"Coefficients\", \"Standard Error\", \"P.Value\"),\n      digits = 4) %>% \n  kable_minimal(full_width = FALSE)\n\n\n\nTerms\n\n\nCoefficients\n\n\nStandard Error\n\n\nP.Value\n\n\nb\n\n\n2.4532\n\n\n0.027\n\n\n<0.001\n\n\na\n\n\n0.0003\n\n\n0.000\n\n\n<0.001\n\n\n\n\n# predicting data based on our NLS model\nlizards_augment <- augment(lizards_nls)\n\n# plotting the predicted data to actual data\nggplot() +\n  geom_point(data = lizards, aes(\n             x = sv_length,\n             y = weight, \n             color = sex)) +\n  geom_line(data = lizards_augment, aes(\n            x = sv_length,\n            y = .fitted,\n            color = \"Model Predictions\"),\n            size = 0.7) +\n  theme_minimal(13) +\n  scale_color_manual(values = c(\"grey45\", \"black\", \"red\")) +\n  theme(legend.position = c(0.2,0.7), legend.title = element_blank()) +\n  labs( x = \"SV Length (mm)\", y = \"Weight (g)\")\n\n\n\n# calculating RMSE\nlizards_rmse <- rmse(lizards_nls, data = lizards)\n\n\n\nFig. 1 compares SV length and weight for all lizard species, colored according to sex. The red line represents the NLS model trained on the data to predict weight as a function of SV length. RMSE for the NLS model was 2.791\nRunning NLS on Male western whiptail lizards\nTable 2 displays the results of NLS analysis on male western whiptail lizards, indicating the coefficients produced by the model, standard error, and significance level.\n\n\n# filtering for male whiptails\nwhips <- lizards %>% \n  filter(spp == \"CNTI\", sex == \"Male\") \n\n# running linear regression on log transformed data to estimate starting coefficients\nguess_whips <- lm(log_weight ~ log_length, data = whips)\n\ntidy_whips_guess <- tidy(guess_model) # tidy output of guess model\n\nwhips_coef <- coefficients(guess_whips) # pulling out the coefficients for use in NLS\n\nwhips_nls <- nls(weight ~ weight_function(a, sv_length, b), # running NLS on male western whiptails\n                  data = whips,\n                  start = list(b = whips_coef[2], # starting from our guess coefficients\n                               a = exp(whips_coef[1]))) # retransforming the intercept coefficient \n\nwhips_nls_tidy <- tidy(whips_nls) # tidy output of model\n\n# finalized table of NLS model\nwhips_nls_tidy %>% \n  select(-statistic) %>% \n  mutate(p.value = case_when(\n    p.value < 0.001 ~ \"<0.001\",\n    p.value > 0.001 ~ as.character(round(p.value, 3)))) %>% \nkable(col.names = c(\"Terms\", \"Coefficients\", \"Standard Error\", \"P Value\"),\n      digits = 4) %>% \n  kable_minimal(full_width = FALSE)\n\n\n\nTerms\n\n\nCoefficients\n\n\nStandard Error\n\n\nP Value\n\n\nb\n\n\n2.3683\n\n\n0.1800\n\n\n<0.001\n\n\na\n\n\n0.0005\n\n\n0.0004\n\n\n0.219\n\n\n\n\n# predicting data based on model\nwhips_augment <- augment(whips_nls)\n\n\n# creating a dataframe with all data and predicted values from augment \nwhiptails_general <- data.frame(lizards, lizards_augment) %>% \n  filter(spp == \"CNTI\", sex == \"Male\") # filtering for the whiptail subset\n\n# visualizing fitted models against actual data\nggplot() +\n  geom_point(data = whips, aes(\n             x = sv_length,\n             y = weight,\n             color = \"Actual Data\")) +\n  geom_line(data = whips_augment, aes(\n            x = sv_length,\n            y = .fitted,\n            color = \"Whiptail Specific Model\"),\n            size = 0.7) +\n  geom_line(data = whiptails_general, aes(\n            x = sv_length,\n            y = .fitted,\n            color = \"All Species Model\"),\n            size = 0.7) +\n  scale_color_manual(values = c(\"black\", \"red\", \"blue\")) +\n  theme_minimal(13) +\n  labs( x = \"SV Length (mm)\", y = \"Weight (g)\") +\n  theme(legend.title = element_blank(),\n        legend.position = c(0.3, 0.72))\n\n\n\n# calculating RMSE\nwhips_rmse <- rmse(whips_nls, data = whips) # running whiptail model on whiptail subset\nwhips_rmse_general <- rmse(lizards_nls, data = whips) # running general model on whiptail subset\n\n\n\nFig. 2 compares SV length and weight in male western whiptail lizards. The red line represents the NLS model trained on the entire lizard dataset including all species, while the blue line is the NLS model trained only on the subset of male western whiptail lizards. Both models predict weight as a function of SV length. The RMSE of the all species model was 3.562, while the RMSE of the whiptail specific model was 3.349. Thus the whiptail specific model is preferred when predicting weight from SV length of male western whiptail lizards, since the model’s lower RMSE shows that it is slightly more accurate and the model’s line appears to better fit the actual spread of data.\n\n\n\n",
    "preview": "posts/2022-02-18-lizardsnls/lizardsnls_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2022-02-18T15:10:09-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-18-sugarmaples/",
    "title": "Comparative Analysis",
    "description": "Hypothesis testing in comparing sugar maple growth.",
    "author": [
      {
        "name": "Lucas Boyd",
        "url": {}
      }
    ],
    "date": "2022-02-18",
    "categories": [],
    "contents": "\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n# attach packages\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\nlibrary(broom)\nlibrary(kableExtra)\nlibrary(ggbeeswarm)\n\n\n\n\n\n# read in the maples data\nmaples <- read_csv(here(\"data\", \"maples.csv\")) %>% \n  mutate(watershed = case_when( # changing observation names to be more descriptive\n    watershed == \"Reference\" ~ \"No Treatment\", \n    watershed == \"W1\" ~ \"Calcium-Treated\"\n  ))\n\n\n\nSummary Statistics\nTable 1 shows summary statistics for stem dry mass (g) and stem length (mm) of sugar maples across the two watersheds where samples were collected during each of the two years of the study. Sugar maples in one watershed were treated with calcium, while the other received no additional treatment.\n\n\n# creating a finalized table with means and SD of stem dry mass and stem length\n\n# creating a summary statistics table\nmaples_summary <- maples %>% \n  group_by(watershed, year) %>% # grouping by watershed and year\n  summarize(mean_mass = mean(stem_dry_mass), # summary statistics for the given variables\n            sd_mass = sd(stem_dry_mass), \n            mean_length = mean(stem_length),\n            sd_length = sd(stem_length), \n            sample_size = n()\n            )\n\n# finalizing a table\nmaples_table <- maples_summary %>% \n  kable(digits = 3, col.names = c(\"Watershed\", \"Year\", # finalizing column names\n                      \"Mean Stem Dry Mass (g)\", \n                      \"SD Stem Dry Mass (g)\",\n                      \"Mean Stem Length (mm)\",\n                      \"SD Stem Length (mm)\", \n                      \"Sample Size\")) %>% \n  kable_material(full_width = FALSE) # adding a theme to the table\n\nmaples_table # printing the table\n\n\n\nWatershed\n\n\nYear\n\n\nMean Stem Dry Mass (g)\n\n\nSD Stem Dry Mass (g)\n\n\nMean Stem Length (mm)\n\n\nSD Stem Length (mm)\n\n\nSample Size\n\n\nCalcium-Treated\n\n\n2003\n\n\n0.033\n\n\n0.011\n\n\n87.886\n\n\n14.342\n\n\n120\n\n\nCalcium-Treated\n\n\n2004\n\n\n0.093\n\n\n0.023\n\n\n97.517\n\n\n13.830\n\n\n60\n\n\nNo Treatment\n\n\n2003\n\n\n0.023\n\n\n0.007\n\n\n80.985\n\n\n13.939\n\n\n120\n\n\nNo Treatment\n\n\n2004\n\n\n0.065\n\n\n0.023\n\n\n85.881\n\n\n15.586\n\n\n59\n\n\n\n\n# wrangling data to only include observations from 2003\nmaples3 <- maples %>% \n  filter(year == \"2003\")\n\n\n\nStem Dry Mass Comparison\n\n\n# visualing stem dry mass across the two watersheds\n\nggplot(data = maples3, aes(y= stem_dry_mass, x = watershed, color = watershed)) +\n  geom_beeswarm(size = 1.2) +\n   stat_summary(fun = mean, # adding summary statistics to plot\n               geom = \"point\",\n               shape = 20,\n               size = 4, \n               fill = \"black\",\n               color = \"black\") +\n  geom_boxplot(fill = NA, width = 0.15, outlier.color = NA, show.legend = FALSE, color = \"black\") + # adding boxplot to plot\n  scale_color_manual(values = c(\"firebrick\", \"darkgreen\")) + # changing colors\n  labs(x = \"Watershed\", y = \"Stem Dry Mass (g)\") + # changing labels\n  theme_minimal(base_size = 11) + # customizing the graph for appearance\n  theme(legend.position = \"none\")+\n  theme(axis.text.x = element_text(size = 13))\n\n\n\n\nFig. 1  compares stem dry mass (g) of sugar maples between samples collected in 2003 from two watersheds: one that was treated with calcium and one that received no additional treatment. Boxplot endpoints indicate the 25th and 75th percentile values. The black line represents the median value for each species while the black point represents the mean value.\n\n\n# pulling vectors for use in analyses\n\ntreated <- maples3 %>%\n  filter(watershed == \"Calcium-Treated\") %>% \n  pull(stem_dry_mass)\n\nnot_treated <- maples3 %>%\n  filter(watershed == \"No Treatment\") %>% \n  pull(stem_dry_mass)\n\n\n\nExploratory Plots\n\n\nhist(treated) # relatively normal, but with some definite positive skew\n\n\n\nhist(not_treated) # a little more normal, but negatively skewed\n\n\n\nqqnorm(treated) # some concerning outliers toward the top of the distribution\n\n\n\nqqnorm(not_treated) # also some concerning outliers\n\n\n\n\nTest Justification: Based on these exploratory plots, I have decided to run a Mann-Whitney U rank-based test to compare the two samples. The histograms revealed significant skew, showing that the data is not normally distributed. Furthermore, the qq plots revealed concerning outliers that are shifting the mean. For these reasons, I believe that a Mann Whitney U test is the most appropriate, given that comparing ranks and medians rather than values and means adjusts for outliers and does not require normally distributed data.\nStatistical Analyses\n\n\n# running the man whitney u test to compare groups \nmwu <- wilcox.test(treated, not_treated) %>% \n  tidy() # storing a tidy table of the outputs of the MWU test\n\n# storing other values to call inline\nmed_treated <- round(median(treated), 3)\nmed_not_treated <- round(median(not_treated), 3)\nmed_difference <- med_treated - med_not_treated\nmed_percent_difference <- round(((med_treated - med_not_treated)/((med_not_treated + med_treated)/2))*100, 1)\n\n\n\nCalcium-treated sugar maples have greater median stem dry mass (g) than non-treated sugar maples (0.032g and 0.022g, respectively). Medians of calcium treated trees were 0.01g (37%) larger than non-treated trees on average. This difference was determined to be significant (Mann Whitney U test: U = 1.1776^{4}, p = < 0.001).\nConclusion: Our analyses found a significant and large difference between sugar maple stem dry mass taken from a watershed treated with calcium and a watershed receiving no additional treatment. This leads us to reject the null and conclude that the ranks of stem dry mass in calcium-treated sugar maples and untreated sugar maples are not equal.\nData Citation\nJuice, S. and T. Fahey. 2019. Health and mycorrhizal colonization response of sugar maple (Acer saccharum) seedlings to calcium addition in Watershed 1 at the Hubbard Brook Experimental Forest ver 3. Environmental Data Initiative. https://doi.org/10.6073/pasta/0ade53ede9a916a36962799b2407097e\n\n\n\n",
    "preview": "posts/2022-02-18-sugarmaples/sugarmaples_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2022-02-18T15:16:27-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-01-welcome/",
    "title": "Data Visualization",
    "description": "Mono Lake water levels and management interventions.",
    "author": [
      {
        "name": "Lucas Boyd",
        "url": {}
      }
    ],
    "date": "2022-01-17",
    "categories": [],
    "contents": "\n\n\n\n\n\n\nFig. 1 shows the water level (in feet above sea level) for Mono Lake from 1850 until 2017 (indicated by the black line). In 1941, the Los Angeles Department of Water & Power began diverting water from Mono Lake’s tributary streams to meet the water demands of the city. In 1978, the Mono Lake Committee was founded and set a goal to restore the lake to previous levels. The dashed line represents MLC’s target of stabilizing the water level at 6392 feet. Critical levels for aquatic birds are indicated by the shaded regions. At a water level of 6377 feet, land bridges form and expose nesting sites to predators. At 6360 feet, high salinity decreases food availability for aquatic birds. At 6350 feet, the impacts of the food shortage become acute.\n\n\n\n",
    "preview": "posts/2022-02-01-welcome/welcome_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-02-18T15:06:02-08:00",
    "input_file": {}
  }
]
